@page "/element"
@using GameModel.Models
@using GameEditor.Client.Components.FormFields
@using Radzen
@using Radzen.Blazor

    <!-- Header -->
    <RadzenRow JustifyContent="JustifyContent.SpaceBetween" AlignItems="AlignItems.Center" Style="margin-bottom:12px;border-bottom:1px solid var(--rz-base-200);padding-bottom:8px;">
        <RadzenColumn Size="6" Small="12">
            <RadzenRow AlignItems="AlignItems.Center" Gap="0.5rem">
                <RadzenColumn>
                    <RadzenText Text="@_title" Style="font-weight:600;" />
                </RadzenColumn>
                <RadzenColumn>
                    <RadzenBadge Text="@_modeDisplay" />
                </RadzenColumn>
            </RadzenRow>
        </RadzenColumn>

        <RadzenColumn Size="6" Small="12" Style="text-align:right;">
            <RadzenButton Text="Save" Icon="save" ButtonStyle="ButtonStyle.Primary" Disabled="@(!_isDirty)" Click="@SaveAsync" />
            <RadzenButton Text="Delete" Icon="delete" ButtonStyle="ButtonStyle.Danger" Disabled="@_isNew" Click="@DeleteAsync" Style="margin-left:8px;" />
            <RadzenButton Text="Cancel" Icon="close" ButtonStyle="ButtonStyle.Light" Click="@Cancel" Style="margin-left:8px;" />
        </RadzenColumn>
    </RadzenRow>

    @if (_error is not null)
    {
        <RadzenAlert Severity="AlertSeverity.Error">@_error</RadzenAlert>
    }
    else if (_edit is null)
    {
        <!-- simple loading -->
        <RadzenRow>
            <RadzenColumn>
                <RadzenProgressBar Mode="ProgressBarMode.Indeterminate" Value="50" />
            </RadzenColumn>
        </RadzenRow>
    }
    else
    {
        <RadzenTemplateForm 
            Data="@_edit" 
            TItem="IGameElement" 
            Submit="@SaveAsync"
            EditContext="_ec"
           >
            <RadzenRow Style="row-gap:12px;vertical-align:center;" >
                <!-- Id -->

                <RadzenColumn Size="8" Medium="6" Large="3">
                    <RadzenFormField Text="Id" Variant="Variant.Filled" Component="Id">
                        <RadzenTextBox @bind-Value="_edit.Id" Name="Id" Style="width:100%" />
                        <RadzenRequiredValidator Component="Id" Text="Id is required" />
                        <RadzenRegexValidator Component="Id" Pattern="@IdPattern" Text="Invalid Id Format" />
                    </RadzenFormField>
                </RadzenColumn>
                            
                <!-- Visible -->
                <RadzenColumn Size="4" Medium="6" Large="3">
                    <RadzenLabel Text="Is Visible" />
                    <RadzenSwitch @bind-Value="_edit.IsVisible" Name="IsVisible" TValue="bool" />
                </RadzenColumn>


                <!-- Name -->
                <RadzenColumn Size="12" Medium="6" Large="4">
                    <RadzenFormField Text="Name" Variant="Variant.Filled" Component="Name">
                        <RadzenTextBox @bind-Value="_edit.Name" Name="Name" Style="width:100%" />
                        <RadzenRequiredValidator Component="Name" Text="Name is required" />
                    </RadzenFormField>
                </RadzenColumn>

                <!-- Description -->
                <RadzenColumn Size="12" Large="5">
                    <RadzenFormField Text="Description" Variant="Variant.Filled" Component="Description">
                        <RadzenTextArea @bind-Value="_edit.Description" Name="Description" Rows="3" Style="width:50rem" />
                    </RadzenFormField>
                </RadzenColumn>

                <!-- Location -->
                @if (_edit is Scene scene)
            {

                <RadzenColumn Size="2" Large="5">
                    <RadzenFormField Text="Column" Variant="Variant.Filled" Component="MapColumn">
                        <RadzenNumeric @bind-Value="scene.MapLocation.Column" Name="MapColumn" />
                    </RadzenFormField>
                </RadzenColumn>
                <RadzenColumn Size="2" Large="5">
                    <RadzenFormField Text="Row" Variant="Variant.Filled" Component="MapRow">
                        <RadzenNumeric @bind-Value="scene.MapLocation.Row" Name="MapRow" />
                    </RadzenFormField>
                </RadzenColumn>

                <RadzenColumn Size="2" Large="5">
                    <RadzenFormField Text="Level" Variant="Variant.Filled" Component="MapLevel">
                        <RadzenNumeric @bind-Value="scene.MapLocation.Level" Name="MapLevel" />
                    </RadzenFormField>
                </RadzenColumn>


                <RadzenColumn Size="2" Large="5">
                    <RadzenFormField Text="Width" Variant="Variant.Filled" Component="MapWidth">
                        <RadzenNumeric @bind-Value="scene.MapLocation.Width" Name="MapWidth"/>
                    </RadzenFormField>
                </RadzenColumn>
                <RadzenColumn Size="2" Large="5">
                    <RadzenFormField Text="Height" Variant="Variant.Filled" Component="MapHeight">
                        <RadzenNumeric @bind-Value="scene.MapLocation.Height" Name="MapHeight" />
                    </RadzenFormField>
                </RadzenColumn>
                


                
            } else
            {
                <RadzenColumn Size="12" Large="5">
                    <RadzenFormField Text="Starting Location" Variant="Variant.Filled" Component="St">
                        <RadzenDropDown @bind-Value=@_edit.StartingLocation
                                        Name="Starting Location"
                                        Data="@(SceneDropdown)"
                                        TextProperty="@nameof(SceneDropdownRecord.Value)"
                                        ValueProperty="@nameof(SceneDropdownRecord.Id)"
                                        Placeholder="(none)"
                                        Style="width:100%" />
                    </RadzenFormField>
                </RadzenColumn>

            }


    
            </RadzenRow>

                
            


                  <br/>
                    

            <RadzenTabs>
                <Tabs>

                <RadzenTabsItem Text="States">
                <!-- States -->
                    <DictionaryTable TValue="string"
                                        OnChanged="() => _isDirty = true"
                                        Help="Named states for this element."
                                        For="@(()=>_edit!.States)" 
                                        @bind-Values="StatesProxy" />

                    <RadzenRow Style="margin-top:12px">
                        <RadzenColumn Size="12" Medium="6" Large="4">
                            <RadzenFormField Text="Starting State" Variant="Variant.Filled" Component="StartingState">
                                <RadzenDropDown @bind-Value="_edit.StartingState"
                                                Name="StartingState"
                                                Data="@(StatesProxy.Keys.ToList())"
                                                AllowClear="true"
                                                Placeholder="(none)"
                                                Style="width:100%" />
                            </RadzenFormField>
                        </RadzenColumn>
                    </RadzenRow>
                </RadzenTabsItem>


                <RadzenTabsItem Text="Attributes">
                        <DictionaryTable TValue="int"
                                            OnChanged="() => _isDirty = true"
                                            For="@(()=>_edit!.Attributes)"
                                            Help="Key/value attributes."
                                            @bind-Values="AttributesProxy" />
                </RadzenTabsItem>

                <RadzenTabsItem Text="Properties">

                        <DictionaryTable TValue="string"
                                            OnChanged="() => _isDirty = true"
                                            For="@(()=>_edit!.Properties)"
                                            Help="Free-form properties."
                                            @bind-Values="PropertiesProxy" />
                </RadzenTabsItem>

                <RadzenTabsItem Text="Flags">

                    <DictionaryTable TValue="bool"
                                        OnChanged="() => _isDirty = true"
                                        For="@(()=>_edit!.Flags)"
                                        Help="Named flags."
                                        @bind-Values="FlagsProxy" />

            </RadzenTabsItem>


            </Tabs>
        </RadzenTabs>
        </RadzenTemplateForm>
    }

