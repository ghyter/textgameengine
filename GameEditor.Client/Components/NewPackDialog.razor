@using MudBlazor
@using GameModel.Models
@inherits ComponentBase

@inject MudBlazor.IDialogService DialogService

<MudDialog>  
    <DialogContent>
        <MudForm @ref="_form">
            <MudTextField @bind-Value="_key" Label="Key" Required="true"
                        Pattern="^[a-z0-9-]+$"
                        HelperText="Lowercase letters, digits, hyphens only."
                        Immediate="true" />

            <MudTextField @bind-Value="_title" Label="Title" Required="true" For="@(() => _title)" />
            <MudTextField @bind-Value="_description" Label="Description" Lines="3" />

            <MudStack Row Justify="Justify.FlexEnd" Spacing="1" Class="mt-4">
                <MudButton Variant="Variant.Text" Color="Color.Default" OnClick="Cancel">Cancel</MudButton>
                <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="Submit">
                    Create
                </MudButton>
            </MudStack>
        </MudForm>
    </DialogContent>
</MudDialog>

@code {
      [CascadingParameter]
    private IMudDialogInstance? MudDialog { get; set; }

    private MudForm? _form;
    private string _key = string.Empty;
    private string _title = string.Empty;
    private string? _description;

    private async Task Submit()
    {
        // Basic key sanitization (optional): trim & lower
        _key = _key.Trim();

        if (string.IsNullOrWhiteSpace(_key) || string.IsNullOrWhiteSpace(_title))
            return;

        // Build a minimal GamePack
        var pack = new GamePack
        {
            Id = _key,
            Title = _title,
            Description = _description ?? string.Empty
        };

        MudDialog?.Close(DialogResult.Ok(pack));
        await Task.CompletedTask;
    }

    private void Cancel() => MudDialog?.Cancel();
}
